name: "🚀 Deploy to EC2"

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v3

    - name: 🔑 Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: 🛠 Deploy to EC2
      run: |
        ssh -T -o ConnectTimeout=10 -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          echo "✅ Connected to EC2"

          cd ~/road-ai-mlops
          echo "📥 Pulling latest code from GitHub..."
          git pull origin master

          echo "📦 Exporting AWS credentials for DVC..."
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

          echo "📦 Running DVC pull for ONNX models..."
          dvc pull || echo "⚠️ DVC pull failed"

          echo "🔧 Checking Docker Compose V2..."
          if ! docker compose version &>/dev/null; then
            echo "Installing Docker Compose V2..."
            sudo mkdir -p /usr/local/lib/docker/cli-plugins
            sudo curl -SL https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
            sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            docker compose version || echo "❌ Docker Compose V2 install failed"
          else
            echo "✅ Docker Compose V2 is already installed"
          fi

          echo "📦 Registering latest ONNX models to MLflow (optional)"
          python3 scripts/register_models.py || echo "⚠️ Skipped model registration"

          echo "🐳 Rebuilding and restarting Docker containers"
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up --build -d

          echo "✅ Deployment complete"
        EOF
