services:
  backend:
    build:
      context: ./backend
    container_name: road-ai-mlops-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - WANDB_API_KEY=${WANDB_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ./backend/temp:/app/temp
    depends_on:
      - mlflow
    restart: always

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: road-ai-mlops-streamlit
    command: streamlit run streamlit_app/main.py --server.port=8501 --server.address=0.0.0.0
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      - API_URL=${API_URL}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
      - WANDB_API_KEY=${WANDB_API_KEY}
    depends_on:
      - backend
    restart: always

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: road-ai-mlops-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=/mlruns
      - MLFLOW_ARTIFACT_ROOT=/mlruns
    volumes:
      - ./mlruns:/mlruns
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri /mlruns --default-artifact-root /mlruns
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always

volumes:
  grafana-storage:
